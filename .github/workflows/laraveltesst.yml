name: Laravel CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: recipes
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -p${{ secrets.DB_PASSWORD }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Stap 1: code uit repository halen
      - uses: actions/checkout@v4

      # Stap 2: PHP installeren
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql
          coverage: none

      # Stap 3: Composer dependencies installeren
      - name: Install Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      # Optioneel: PHP Linter
      - name: Run PHP Linter
        run: |
          if [ -f vendor/bin/phpcs ]; then
            vendor/bin/phpcs app/ routes/
          fi
          if [ -f vendor/bin/phpstan ]; then
            vendor/bin/phpstan analyse app/ --level max
          fi

      # Stap 4: Kopieer .env voorbeeld
      - name: Copy .env
        run: cp .env.example .env

      # Stap 5: Genereer APP_KEY veilig
      - name: Generate APP Key
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
        run: php artisan key:generate --force

      # Stap 6: Zorg dat storage en cache schrijfbaar zijn
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      # Stap 7: Wacht tot MySQL service beschikbaar is
      - name: Wait for MySQL
        run: |
          sudo apt-get install -y mysql-client
          until mysqladmin ping -h127.0.0.1 -uroot -p${{ secrets.DB_PASSWORD }} --silent; do
            echo "Waiting for database connection..."
            sleep 5
          done

      # Stap 8: Voer database migraties uit
      - name: Run Migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: recipes
          DB_USERNAME: root
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: php artisan migrate --force

      # Stap 9: Voer tests uit
      - name: Run Tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: recipes
          DB_USERNAME: root
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: php artisan test
